// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPERADMIN
  ADMIN
  DISPATCHER
  DRIVER
}

model user {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(DISPATCHER)
  phone     String?
  settings  Json?    // User preferences and settings
  createdAt DateTime @default(now())
  driver    Driver?
}

model Vehicle {
  id          Int      @id @default(autoincrement())
  number      String   @unique
  model       String
  capacity    Int
  isAvailable Boolean  @default(true)
  createdAt   DateTime @default(now())

  driver   Driver?    @relation("DriverVehicle")
  Shipment Shipment[]
}

model Driver {
  id            Int      @id @default(autoincrement())
  userId        Int      @unique
  name          String
  phone         String   @unique
  licenseNumber String   @unique
  createdAt     DateTime @default(now())

  vehicle   Vehicle?   @relation("DriverVehicle", fields: [vehicleId], references: [id])
  vehicleId Int?       @unique
  Shipment  Shipment[]
  user      user      @relation(fields: [userId], references: [id])
}

enum GoodsType {
  BOX
  NAGS
  CARTONS
  BAGS
  ROLLS
  PALLETS
  OTHER
}

enum PaymentMethod {
  TO_PAY
  PAID
  TO_BE_BILLED
}

enum ShipmentStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  DELIVERED
}

model Shipment {
  id                  Int           @id @default(autoincrement())
  consigneeName       String
  consignorName       String
  consigneeAddress    String
  consignorAddress    String
  consigneeGstNo      String
  consignorGstNo      String
  date                DateTime
  billNo              String        @unique
  transportName       String
  goodsType           GoodsType
  goodsDescription    String
  weight              Float
  privateMark         String?
  paymentMethod       PaymentMethod
  freightCharges      Float
  localCartageCharges Float
  hamaliCharges       Float
  stationaryCharges   Float
  doorDeliveryCharges Float
  otherCharges        Float
  grandTotal          Float
  source              String
  destination         String
  ewayBillNumber      String?
  status              ShipmentStatus @default(PENDING)
  createdAt           DateTime      @default(now())

  driver   Driver? @relation(fields: [driverId], references: [id])
  driverId Int?

  vehicle   Vehicle? @relation(fields: [vehicleId], references: [id])
  vehicleId Int?
}
